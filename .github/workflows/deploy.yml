name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile # Ensure your Dockerfile is correctly named and located
          push: true
          tags: techmanish2004/cicdwork:latest  # Update with your Docker Hub username/repo

      - name: Verify Pushed Image
        run: docker pull techmanish2004/cicdwork:latest  # Update with your Docker Hub username/repo

      - name: Deploy to EC2 and Setup Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker if not installed
            if ! command -v docker &> /dev/null
            then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
            fi
            
            # Pull the latest image from Docker Hub
            sudo docker pull techmanish2004/cicdwork:latest
            # Stop and remove the running container if it exists
            sudo docker stop cicdwork || true
            sudo docker rm cicdwork || true
            # Run the new container
            sudo docker run -d --name cicdwork -p 4001:4000 techmanish2004/cicdwork:latest

            # Install Nginx if not installed
            if ! command -v nginx &> /dev/null
            then
              sudo apt update
              sudo apt install -y nginx
            fi

            # Configure Nginx
            sudo tee /etc/nginx/sites-available/default > /dev/null <<EOL
            server {
                listen 80;

                location / {
                    proxy_pass http://localhost:4001;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }
            EOL

            # Restart Nginx to apply changes
            sudo systemctl restart nginx
